// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview AI flow for generating marketing content from a restaurant's menu.
 *
 * - generateMarketingContent - A function that generates marketing content based on the menu.
 * - GenerateMarketingContentInput - The input type for the generateMarketingContent function.
 * - GenerateMarketingContentOutput - The return type for the generateMarketingContent function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MenuItemSchema = z.object({
  name: z.string().describe('The name of the menu item.'),
  description: z.string().describe('The description of the menu item.'),
  imageUrl: z.string().optional().describe('An optional image URL for the menu item.'),
});

const GenerateMarketingContentInputSchema = z.object({
  menuItems: z.array(MenuItemSchema).describe("The list of selected menu items to feature."),
  contentType: z
    .enum(['blog post', 'social media update', 'recipe'])
    .describe('The type of marketing content to generate.'),
  tone: z
    .string()
    .optional()
    .describe('The desired tone of the content (e.g., professional, funny, casual).'),
});
export type GenerateMarketingContentInput = z.infer<typeof GenerateMarketingContentInputSchema>;

const GenerateMarketingContentOutputSchema = z.object({
  content: z.string().describe('The generated marketing content in Markdown format.'),
});
export type GenerateMarketingContentOutput = z.infer<typeof GenerateMarketingContentOutputSchema>;

export async function generateMarketingContent(
  input: GenerateMarketingContentInput
): Promise<GenerateMarketingContentOutput> {
  return generateMarketingContentFlow(input);
}

const generateMarketingContentPrompt = ai.definePrompt({
  name: 'generateMarketingContentPrompt',
  input: {schema: GenerateMarketingContentInputSchema},
  output: {schema: GenerateMarketingContentOutputSchema},
  prompt: `You are a marketing expert for restaurants. Your task is to generate an engaging {{contentType}} based on a selection of menu items.
The output should be in Markdown format. If images are provided, incorporate them into the content naturally.

**Tone:** {{#if tone}}{{tone}}{{else}}Engaging and friendly{{/if}}

**Featured Menu Items:**
{{#each menuItems}}
- **{{name}}**: {{description}}
  {{#if imageUrl}}
  Image: {{media url=imageUrl}}
  {{/if}}
{{/each}}

Now, generate the {{contentType}} in Markdown.
`,
});

const generateMarketingContentFlow = ai.defineFlow(
  {
    name: 'generateMarketingContentFlow',
    inputSchema: GenerateMarketingContentInputSchema,
    outputSchema: GenerateMarketingContentOutputSchema,
  },
  async input => {
    const {output} = await generateMarketingContentPrompt(input);
    return output!;
  }
);
